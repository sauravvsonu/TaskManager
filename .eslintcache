[{"C:\\Users\\SOURAV\\Desktop\\Internshala Project\\legalmindintern\\src\\index.js":"1","C:\\Users\\SOURAV\\Desktop\\Internshala Project\\legalmindintern\\src\\App.js":"2","C:\\Users\\SOURAV\\Desktop\\Internshala Project\\legalmindintern\\src\\Components\\Navbar.js":"3","C:\\Users\\SOURAV\\Desktop\\Internshala Project\\legalmindintern\\src\\Components\\Dashboard.js":"4","C:\\Users\\SOURAV\\Desktop\\Internshala Project\\legalmindintern\\src\\Components\\Task\\Task.js":"5","C:\\Users\\SOURAV\\Desktop\\Internshala Project\\legalmindintern\\src\\Components\\Task\\CreateTask.js":"6","C:\\Users\\SOURAV\\Desktop\\Internshala Project\\legalmindintern\\src\\Components\\Task\\AddTaskManager.js":"7","C:\\Users\\SOURAV\\Desktop\\Internshala Project\\legalmindintern\\src\\Components\\Auth\\SignInPage.js":"8","C:\\Users\\SOURAV\\Desktop\\Internshala Project\\legalmindintern\\src\\Components\\Auth\\SignUpPage.js":"9","C:\\Users\\SOURAV\\Desktop\\Internshala Project\\legalmindintern\\src\\reportWebVitals.js":"10","C:\\Users\\SOURAV\\Desktop\\Internshala Project\\legalmindintern\\src\\Components\\Auth\\Login.js":"11","C:\\Users\\SOURAV\\Desktop\\Internshala Project\\legalmindintern\\src\\Components\\Auth\\LoginDashboad.js":"12","C:\\Users\\SOURAV\\Desktop\\Internshala Project\\legalmindintern\\src\\Components\\Auth\\SignupDashboard.js":"13","C:\\Users\\SOURAV\\Desktop\\Internshala Project\\legalmindintern\\src\\Components\\Auth\\Signup.js":"14"},{"size":564,"mtime":1619380709801,"results":"15","hashOfConfig":"16"},{"size":378,"mtime":1614756778992,"results":"17","hashOfConfig":"16"},{"size":1981,"mtime":1614612337497,"results":"18","hashOfConfig":"16"},{"size":3364,"mtime":1614757757785,"results":"19","hashOfConfig":"16"},{"size":2852,"mtime":1619380767151,"results":"20","hashOfConfig":"16"},{"size":2342,"mtime":1614612286787,"results":"21","hashOfConfig":"16"},{"size":1905,"mtime":1612808171846,"results":"22","hashOfConfig":"16"},{"size":2426,"mtime":1612799077645,"results":"23","hashOfConfig":"16"},{"size":2530,"mtime":1612799076020,"results":"24","hashOfConfig":"16"},{"size":362,"mtime":1613151168436,"results":"25","hashOfConfig":"16"},{"size":3599,"mtime":1614713928617,"results":"26","hashOfConfig":"16"},{"size":2854,"mtime":1614757594913,"results":"27","hashOfConfig":"16"},{"size":2062,"mtime":1614701914469,"results":"28","hashOfConfig":"16"},{"size":3997,"mtime":1614756895780,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1lukz1j",{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"32"},"C:\\Users\\SOURAV\\Desktop\\Internshala Project\\legalmindintern\\src\\index.js",[],["65","66"],"C:\\Users\\SOURAV\\Desktop\\Internshala Project\\legalmindintern\\src\\App.js",["67","68","69"],"\nimport Dashboard from \"./Components/Dashboard\";\nimport { Component } from 'react';\nimport Login from './Components/Auth/Login';\nimport LoginDashboad from \"./Components/Auth/LoginDashboad\";\nimport SignupDashboard from \"./Components/Auth/SignupDashboard\";\n\nexport class App extends Component {\n\n  render() {\n    return (\n      <LoginDashboad />\n    )\n  }\n}\n\n\nexport default App;\n","C:\\Users\\SOURAV\\Desktop\\Internshala Project\\legalmindintern\\src\\Components\\Navbar.js",["70","71","72","73"],"import { Link } from 'react-router-dom';\r\nimport { NavLink } from 'react-router-dom'\r\nimport './navBar.css'\r\nimport React, { Component } from 'react'\r\nimport axios from 'axios';\r\n\r\nexport class Navbar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            imagelink: '',\r\n            number: 0\r\n        }\r\n    }\r\n\r\n    number = () => {\r\n        var randomNumber = Math.floor(Math.random() * 1000)\r\n        // console.log(randomNumber)\r\n        this.getlink(randomNumber)\r\n        // this.setState({\r\n        //     number: randomNumber\r\n        // }, {\r\n        //     console.log(this.state.number)\r\n        // });\r\n        // console.log(this.state.number)\r\n\r\n    }\r\n    getlink = (randonNumber) => {\r\n        axios.get(`https://picsum.photos/id/${randonNumber}/info`)\r\n            .then(response => {\r\n                //   console.log(response);\r\n                this.setState({\r\n                    imagelink: response.data.download_url\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.number()\r\n\r\n    }\r\n    render() {\r\n        const { imagelink } = this.state;\r\n        console.log(this.state.number)\r\n        return (\r\n            <div>\r\n                <nav className=\"nav-wrapper nav-color\">\r\n                    <div className=\"container\">\r\n                        <a to='/' className=\"brand-logo\"> Task Manager</a>\r\n                        <ul className=\"right\">\r\n                            <li><a to='/' className='btn btn-floating blue lighten-1'>\r\n                                <img src={imagelink} alt=\"DP\" />\r\n                            </a></li>\r\n                        </ul>\r\n                        {/* <SignIn/> */}\r\n                        {/* <SignOut/> */}\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar\r\n","C:\\Users\\SOURAV\\Desktop\\Internshala Project\\legalmindintern\\src\\Components\\Dashboard.js",["74"],"import React, { Component } from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport AddTaskManager from \"./Task/AddTaskManager\";\r\nimport CreateTask from \"./Task/CreateTask\";\r\nimport Task from \"./Task/Task\";\r\nimport \"./Dashboard.css\";\r\n\r\n\r\nconst textStlye = {\r\n  backgroundColor: \"#09203f\",\r\n};\r\n\r\nexport class Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      logout: \"\",\r\n      add: \"\",\r\n      AddTaskManager: false,\r\n      addTask: false,\r\n    };\r\n    this.handleCloseTaskBar = this.handleCloseTaskBar.bind(this);\r\n  }\r\n\r\n  handleClickAddTaskBar = () => {\r\n    this.setState({ AddTaskManager: true });\r\n  };\r\n\r\n  handleCloseTaskBar = () => {\r\n    this.setState({ AddTaskManager: false });\r\n  };\r\n\r\n  handleAddTask = () => {\r\n    this.setState({ addTask: true });\r\n  };\r\n\r\n  handleCloseTask = () => {\r\n    this.setState({ addTask: false });\r\n  };\r\n\r\n  handleClickAdd = () => {\r\n    this.setState({\r\n      logout: 4,\r\n    });\r\n  };\r\n\r\n  async logout() {\r\n\r\n    try {\r\n      let res = await fetch('/logout', {\r\n        method: 'post',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n\r\n      let result = await res.json();\r\n\r\n      if (result && result.success) {\r\n        this.props.isLoggedIn = false;\r\n        this.props.username = \"\";\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar />\r\n        <div className=\"dashboard container\">\r\n          <div className=\"row\">\r\n            <Task addTask={this.handleAddTask} />\r\n            <Task addTask={this.handleAddTask} />\r\n            <Task addTask={this.handleAddTask} />\r\n            <Task addTask={this.handleAddTask} />\r\n            <Task addTask={this.handleAddTask} />\r\n            <Task addTask={this.handleAddTask} />\r\n          </div>\r\n\r\n          <div className=\"fixed-action-btn\" style={{ left: \"23px\" }}>\r\n            <a\r\n              className=\"btn-floating btn-large waves-effect waves-light (pulse)\"\r\n              style={textStlye}\r\n              onClick={this.logout}\r\n            >\r\n              <i className=\"large material-icons\">logout</i>\r\n            </a>\r\n          </div>\r\n          <div className=\"fixed-action-btn\">\r\n            <button\r\n              className=\"btn-floating btn-large waves-effect waves-light (pulse)\"\r\n              style={textStlye}\r\n              onClick={this.handleClickAddTaskBar}\r\n            >\r\n              <i className=\"large material-icons\">add</i>\r\n            </button>\r\n            {/* {this.state.AddTaskManager ? {\r\n                        return(\r\n                        <Redirect to={'/signup'} />\r\n                        {this.setState({AddTaskManager: false})}\r\n                        )}: null} */}\r\n            {/* if ({this.state.AddTaskManager}) return <Redirect to={'/signup'} /> */}\r\n            {console.log(this.state)}\r\n          </div>\r\n        </div>\r\n        <div className=\"AddTaskBar\">\r\n          {this.state.addTask ? (\r\n            <CreateTask closeTask={this.handleCloseTask} />\r\n          ) : null}\r\n          {this.state.AddTaskManager ? (\r\n            <AddTaskManager closeTaskManager={this.handleCloseTaskBar} />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\SOURAV\\Desktop\\Internshala Project\\legalmindintern\\src\\Components\\Task\\Task.js",["75"],"import React, { Component } from 'react'\r\nimport './Task.css';\r\n// import M from \"materialize-css/dist/js/materialize\";\r\n\r\n// const Style ={\r\n//    marginRight: '20px'\r\n// }\r\nconst buttonStyle = {\r\n    backgroundColor: '#09203f'\r\n}\r\n\r\n\r\nexport class Task extends Component {\r\n\r\n    componentDidMount() {\r\n        const M = window.M;\r\n        document.addEventListener('DOMContentLoaded', function () {\r\n            var elems = document.querySelectorAll('.collapsible');\r\n            var instances = M.Collapsible.init(elems, {});\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"card z-depth-3 col s12 m12 l5 cardStyle\" >\r\n                <div className=\"cardTitle cardTitleStyle\">\r\n                    <span>Task</span>\r\n                </div>\r\n                <div className=\"cardDetail \">\r\n                    <ul className=\"collapsible\">\r\n                        <li>\r\n                            <div className=\"collapsible-header\">\r\n                                <label>\r\n                                    <input type=\"checkbox\" />\r\n                                    <span></span>\r\n                                </label>\r\n                                First\r\n                            </div>\r\n                            <div className=\"collapsible-body\"><span>Lorem ipsum dolor sit amet consectetur adipisicing elit. Veniam adipisci placeat iusto alias dolorem nostrum maiores quis blanditiis amet, ex iure dolore magni eaque ea porro, provident itaque fuga eligendi.</span></div>\r\n                        </li>\r\n                        <li>\r\n                            <div className=\"collapsible-header\">\r\n                                <label>\r\n                                    <input type=\"checkbox\" defaultChecked=\"checked\" />\r\n                                    <span></span>\r\n                                </label>\r\n                                 Second</div>\r\n                            <div className=\"collapsible-body\"><span>Lorem ipsum dolor sit amet.</span></div>\r\n                        </li>\r\n                        <li>\r\n                            <div className=\"collapsible-header\">\r\n                                <label>\r\n                                    <input type=\"checkbox\" />\r\n                                    <span></span>\r\n                                </label>\r\n                                Third</div>\r\n                            <div className=\"collapsible-body\"><span>Lorem ipsum dolor sit amet.</span></div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <button className=\"btn-floating halfway-fab waves-effect waves-light \" style={buttonStyle} onClick={this.props.addTask}><i className=\"material-icons\">add</i></button>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Task\r\n","C:\\Users\\SOURAV\\Desktop\\Internshala Project\\legalmindintern\\src\\Components\\Task\\CreateTask.js",[],"C:\\Users\\SOURAV\\Desktop\\Internshala Project\\legalmindintern\\src\\Components\\Task\\AddTaskManager.js",[],"C:\\Users\\SOURAV\\Desktop\\Internshala Project\\legalmindintern\\src\\Components\\Auth\\SignInPage.js",[],"C:\\Users\\SOURAV\\Desktop\\Internshala Project\\legalmindintern\\src\\Components\\Auth\\SignUpPage.js",[],"C:\\Users\\SOURAV\\Desktop\\Internshala Project\\legalmindintern\\src\\reportWebVitals.js",[],"C:\\Users\\SOURAV\\Desktop\\Internshala Project\\legalmindintern\\src\\Components\\Auth\\Login.js",[],"C:\\Users\\SOURAV\\Desktop\\Internshala Project\\legalmindintern\\src\\Components\\Auth\\LoginDashboad.js",["76"],"\r\nimport Dashboard from \"../Dashboard\";\r\nimport { Component } from 'react';\r\nimport Login from './Login';\r\nimport SignupDashboard from \"./SignupDashboard\";\r\n\r\nexport class LoginDashboad extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            loading: true,\r\n            isLoggedIn: false,\r\n            username: '',\r\n            firstSignup: false\r\n        }\r\n        // this.signup = this.signup.bind(this);\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n\r\n        try {\r\n            let res = await fetch('/isLoggedIn', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n\r\n            let result = await res.json();\r\n\r\n            if (result && result.success) {\r\n                this.setState({\r\n                    loading: false,\r\n                    isLoggedIn: true,\r\n                    username: result.username\r\n                }\r\n                )\r\n            }\r\n            else {\r\n                this.setState({\r\n                    loading: false,\r\n                    isLoggedIn: false\r\n                }\r\n                )\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            this.setState({\r\n                loading: false,\r\n                isLoggedIn: false\r\n            }\r\n            )\r\n        }\r\n    }\r\n\r\n    signup = () => {\r\n        this.setState({\r\n            firstSignup: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        { console.log(this.state.firstSignup) }\r\n        if (this.state.loading) {\r\n            return (\r\n                <div>\r\n                    pls wait Page is Loading!!!\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            if (this.state.isLoggedIn) {\r\n                return (\r\n                    <div>\r\n                        <Dashboard\r\n                            isLoggedIn={this.state.isLoggedIn}\r\n                            username={this.state.username}\r\n                        />\r\n                    </div>\r\n                )\r\n            }\r\n            if (this.state.firstSignup) {\r\n                return (\r\n                    <div>\r\n                        <SignupDashboard />\r\n                    </div>\r\n                )\r\n            }\r\n            else {\r\n                return (\r\n                    <div>\r\n                        <Login\r\n                            loading={this.state.loading}\r\n                            isLoggedIn={this.state.isLoggedIn}\r\n                            username={this.state.username}\r\n                            Signup={this.signup}\r\n                        />\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default LoginDashboad;\r\n","C:\\Users\\SOURAV\\Desktop\\Internshala Project\\legalmindintern\\src\\Components\\Auth\\SignupDashboard.js",[],"C:\\Users\\SOURAV\\Desktop\\Internshala Project\\legalmindintern\\src\\Components\\Auth\\Signup.js",["77"],"import React, { Component } from 'react'\r\nimport './SignInPage.css'\r\n\r\nexport class Signup extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            cnfpassword: \"\",\r\n            buttonDisabled: false\r\n\r\n        }\r\n    }\r\n\r\n\r\n    handlePasswordChange = (event) => {\r\n        this.setState({\r\n            password: event.target.value\r\n        })\r\n    }\r\n    handleCnfPasswordChange = (event) => {\r\n        this.setState({\r\n            cnfpassword: event.target.value\r\n        })\r\n    }\r\n    handleNameChange = (event) => {\r\n        this.setState({\r\n            username: event.target.value\r\n        })\r\n    }\r\n\r\n    resetForm() {\r\n        this.setState({\r\n            username: \"\",\r\n            password: \"\",\r\n            cnfpassword: \"\",\r\n            butonDisabled: false\r\n        })\r\n    }\r\n\r\n    async doSignup() {\r\n\r\n\r\n        if (!this.state.username) {\r\n            alert('username and password required');\r\n            return;\r\n        }\r\n        if (!this.state.password) {\r\n            alert('username and password required');\r\n            return;\r\n        }\r\n        if (this.state.password !== this.state.cnfpassword) {\r\n            this.resetForm();\r\n            alert('Password not matched');\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            butonDisabled: true\r\n        })\r\n\r\n        try {\r\n            let res = await fetch('/signup', {\r\n                method: 'post',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    username: this.state.username,\r\n                    password: this.state.password\r\n                })\r\n            })\r\n\r\n            let result = await res.json();\r\n\r\n            if (result && result.success) {\r\n                this.props.isSignedup = true\r\n                this.props.username = result.username\r\n            }\r\n            if (result && result.success === false) {\r\n                this.resetForm();\r\n                alert(result.msg);\r\n            } else { alert(result.msg) }\r\n        } catch (err) {\r\n            console.log(err);\r\n            this.resetForm()\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { email, password, username, cnfpassword } = this.state\r\n        return (\r\n            <div className=\"loginBody\">\r\n                <div className=\"container formBox\">\r\n                    <h3 className=\"loginText center\">Sign Up!</h3>\r\n                    <form className=\"col s12\" onSubmit={() => this.doSignup()} >\r\n                        <div className=\"input-field col s12 \">\r\n                            <input className=\"validate\" id='name' type=\"text\" value={username} onChange={this.handleNameChange} />\r\n                            <label htmlFor=\"name\">Username: </label>\r\n                        </div>\r\n                        <div className=\"input-field col s12\">\r\n                            <input className=\"validate\" id=\"password\" type=\"password\" value={password} onChange={this.handlePasswordChange} />\r\n                            <label htmlFor=\"password\">Password: </label>\r\n                        </div>\r\n                        <div className=\"input-field col s12\">\r\n                            <input className=\"validate\" id=\"cnfpassword\" type=\"password\" value={cnfpassword} onChange={this.handleCnfPasswordChange} />\r\n                            <label htmlFor=\"cnfpassword\">Confirm Password: </label>\r\n                        </div>\r\n                        <div className=\"row  center\">\r\n                            <button className=\"waves-effect waves-light btn-small\" type=\"submit\" name=\"action\" disabled={this.state.butonDisabled} >Signup </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signup\r\n",{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":2,"column":8,"nodeType":"84","messageId":"85","endLine":2,"endColumn":17},{"ruleId":"82","severity":1,"message":"86","line":4,"column":8,"nodeType":"84","messageId":"85","endLine":4,"endColumn":13},{"ruleId":"82","severity":1,"message":"87","line":6,"column":8,"nodeType":"84","messageId":"85","endLine":6,"endColumn":23},{"ruleId":"82","severity":1,"message":"88","line":1,"column":10,"nodeType":"84","messageId":"85","endLine":1,"endColumn":14},{"ruleId":"82","severity":1,"message":"89","line":2,"column":10,"nodeType":"84","messageId":"85","endLine":2,"endColumn":17},{"ruleId":"90","severity":1,"message":"91","line":55,"column":25,"nodeType":"92","endLine":55,"endColumn":58},{"ruleId":"90","severity":1,"message":"91","line":57,"column":33,"nodeType":"92","endLine":57,"endColumn":87},{"ruleId":"90","severity":1,"message":"91","line":86,"column":13,"nodeType":"92","endLine":90,"endColumn":14},{"ruleId":"82","severity":1,"message":"93","line":19,"column":17,"nodeType":"84","messageId":"85","endLine":19,"endColumn":26},{"ruleId":"94","severity":1,"message":"95","line":66,"column":9,"nodeType":"96","messageId":"97","endLine":66,"endColumn":48},{"ruleId":"82","severity":1,"message":"98","line":95,"column":17,"nodeType":"84","messageId":"85","endLine":95,"endColumn":22},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'Dashboard' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","'SignupDashboard' is defined but never used.","'Link' is defined but never used.","'NavLink' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'instances' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'email' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]